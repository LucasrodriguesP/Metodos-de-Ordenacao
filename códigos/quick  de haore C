#include <stdio.h>
#include <stdlib.h>
void swap(int A[], int i, int j){
    int temp = A[i];
    A[i] = A[j];
    A[j] = temp;
}

int hoarePartition(int A[], int inicio, int fim) {
    //o pivo é o elemento inicial
    int pivo = A[inicio];
    int i = inicio + 1;
    int j = fim;

    //O loop irá parar quando os índices se ultrapassarem
    while (i <= j) {
        //achar elemento a esquerda maioir que o pivo
        while (i <= j && A[i] <= pivo) {
            i = i + 1;
        }
        //achar o elemento a direita maior que o pivo
        while (i <= j && A[j] > pivo) {
            j = j - 1;
        }

        
        if (i < j) {
            swap(A, i, j);
        }
    }
    //coloca o pivô na posição de ordenação
    swap(A, inicio, j);
    return j; // posição do pivô
}
void quicksortHoare(int A[], int inicio, int fim) {
    if (inicio < fim) {
        //realiza a partição
        int q = hoarePartition(A, inicio, fim);
        //ordena a partição esquerda
        quicksortHoare(A, inicio, q - 1);
        //ordena a partição direita
        quicksortHoare(A, q + 1, fim);
    }
}
